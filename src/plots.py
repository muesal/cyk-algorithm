
import matplotlib.pyplot as plt

## env: source cyk/bin/activate
## run: python plots.py
## xdg-open plots.png
length = range(100,5100,100)
length_2 = range(100,2600,100)
length_3 = range(100,11000,100)

dyck_bu =       False
dyck_order =    False
dyck_td =       False
stupid =        False
starting_td =   False
ending =        True
starting_bu =   False
linear_cnf =    False
linear_dyck =   False
linear_abc =    False


if (dyck_bu) :
    # Dyck Bottom-Up
    #((...))
    time_bu_1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 23, 25, 27, 29, 31, 34, 36, 39, 41, 44, 47, 50, 53]
    counter_bu_1 = [664150, 5323300, 17977450, 42626600, 83270750, 143909900, 228544050, 341173200, 485797350, 666416500, 887030650, 1151639800, 1464243950, 1828843100, 2249437250, 2730026400, 3274610550, 3887189700, 4571763850, 5332333000, 6172897150, 7097456300, 8110010450, 9214559600, 10415103750, 11715642900, 13120177050, 14632706200, 16257230350, 17997749500, 19858263650, 21842772800, 23955276950, 26199776100, 28580270250, 31100759400, 33765243550, 36577722700, 39542196850, 42662666000, 45943130150, 49387589300, 53000043450, 56784492600, 60744936750, 64885375900, 69209810050, 73722239200, 78426663350, 83327082500]

    #()..()
    time_bu_2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 22, 24, 26, 29, 32, 35, 38, 43, 45, 49, 52, 57, 62, 66, 71, 77, 81, 88]
    counter_bu_2 = [626175, 5004850, 16886025, 40019700, 78155875, 135044550, 214435725, 320079400, 455725575, 625124250, 832025425, 1080179100, 1373335275, 1715243950, 2109655125, 2560318800, 3070984975, 3645403650, 4287324825, 5000498500, 5788674675, 6655603350, 7605034525, 8640718200, 9766404375, 10985843050, 12302784225, 13720977900, 15244174075, 16876122750, 18620573925, 20481277600, 22461983775, 24566442450, 26798403625, 29161617300, 31659833475, 34296802150, 37076273325, 40001997000, 43077723175, 46307201850, 49694183025, 53242416700, 56955652875, 60837641550, 64892132725, 69122876400, 73533622575, 78128121250]

    #)()..() (additional closing bracket)
    time_bu_3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 22, 24, 26, 29, 32, 35, 38, 40, 44, 49, 52, 57, 61, 66, 71, 75, 80]
    counter_bu_3 = [646375, 5085250, 17066625, 40340500, 78656875, 135765750, 215417125, 321361000, 457347375, 627126250, 834447625, 1083061500, 1376717875, 1719166750, 2114158125, 2565442000, 3076768375, 3651887250, 4294548625, 5008502500, 5797498875, 6665287750, 7615619125, 8652243000, 9778909375, 10999368250, 12317369625, 13736663500, 15260999875, 16894128750, 18639800125, 20501764000, 22483770375, 24589569250, 26822910625, 29187544500, 31687220875, 34325689750, 37106701125, 40034005000, 43111351375, 46342490250, 49731171625, 53281145500, 56996161875, 60879970750, 64936322125, 69168966000, 73581652375, 78178131250]


    #()..()( (additional opening bracket)
    time_bu_4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 19, 21, 23, 26, 28, 31, 34, 37, 41, 43, 47, 51, 54, 59, 65, 69, 75, 80, 85]
    counter_bu_4 = [646375, 5085250, 17066625, 40340500, 78656875, 135765750, 215417125, 321361000, 457347375, 627126250, 834447625, 1083061500, 1376717875, 1719166750, 2114158125, 2565442000, 3076768375, 3651887250, 4294548625, 5008502500, 5797498875, 6665287750, 7615619125, 8652243000, 9778909375, 10999368250, 12317369625, 13736663500, 15260999875, 16894128750, 18639800125, 20501764000, 22483770375, 24589569250, 26822910625, 29187544500, 31687220875, 34325689750, 37106701125, 40034005000, 43111351375, 46342490250, 49731171625, 53281145500, 56996161875, 60879970750, 64936322125, 69168966000, 73581652375, 78178131250]

    plt.figure()
    plt.grid(axis='y')
    plt.title('Dyck language (bottom-up)')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length, time_bu_1, color='r',linestyle='-',label='bu ((..))')
    plt.plot(length, time_bu_2, color='b',linestyle='-',label='bu ()..()')
    plt.plot(length, time_bu_3, color='g',linestyle='-',label='bu )()..()')
    plt.plot(length, time_bu_4, color='y',linestyle='-',label='bu ()..()(')
    plt.legend(loc='upper left')
    plt.savefig('t_dyck_bu.jpg')



if dyck_td:
    #Top-Down
    # slow cases; new length (100 - 2500)
    time_td_1 = [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 4, 5, 7, 9, 10, 13, 15, 18, 21, 24, 28, 32, 36, 41] #, 47, 52, 58, 65, 72, 79, 87, 96, 105, 114, 124, 135, 147, 158, 171, 184, 198, 212, 228, 244, 260, 278, 297, 315, 334]
    counter_td_1 = [335800, 2676600, 9022400, 21373200, 41729000, 72089800, 114455600, 170826400, 243202200, 333583000, 443968800, 576359600, 732755400, 915156200, 1125562000, 1365972800, 1638388600, 1944809400, 2287235200, 2667666000, 3088101800, 3550542600, 4056988400, 4609439200, 5209895000] #, 5860355800, 6562821600, 7319292400, 8131768200, 9002249000, 9932734800, 10925225600, 11981721400, 13104222200, 14294728000, 15555238800, 16887754600, 18294275400, 19776801200, 21337332000, 22977867800, 24700408600, 26506954400, 28399505200, 30380061000, 32450621800, 34613187600, 36869758400, 39222334200, 41672915000]

    #()..()( (additional opening bracket)
    time_td_4 = [0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 17, 20, 24, 29, 34, 40, 46, 52, 60, 68]
    counter_td_4 = [550525, 4368550, 14704075, 34807100, 67927625, 117315650, 186221175, 277894200, 395584725, 542542750, 722018275, 937261300, 1191521825, 1488049850, 1830095375, 2220908400, 2663738925, 3161836950, 3718452475, 4336835500, 5020236025, 5771904050, 6595089575, 7493042600, 8469013125]

    plt.figure()
    plt.grid(axis='y')
    plt.title('Dyck language (top-down, slow cases)')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length_2, time_td_1, color='r',linestyle='-',label='td ((..))')
    plt.plot(length_2, time_td_4, color='b',linestyle='-',label='td ()..()(')
    plt.legend(loc='upper left')
    plt.savefig('t_dyck_td_slow.jpg')


    # Dyck Top-down fast cases; Time in Milliseconds, new length (100 - 10000)
    #()..()
    time_td_2 = [0, 0, 1, 1, 1, 3, 3, 4, 3, 4, 5, 6, 10, 10, 11, 10, 15, 16, 14, 15, 18, 23, 20, 23, 27, 29, 26, 29, 38, 32, 34, 39, 41, 41, 48, 46, 52, 58, 57, 67, 68, 71, 85, 86, 82, 80, 86, 90, 88, 91, 95, 115, 102, 133, 143, 136, 125, 137, 126, 145, 153, 155, 151, 177, 177, 186, 187, 165, 202, 209, 242, 242, 242, 254, 254, 258, 290, 292, 291, 295, 321, 320, 322, 338, 349, 351, 362, 381, 382, 382, 401, 400, 425, 424, 429, 440, 457, 460, 468, 476]
    counter_td_2 = [7647, 30297, 67947, 120597, 188247, 270897, 368547, 481197, 608847, 751497, 909147, 1081797, 1269447, 1472097, 1689747, 1922397, 2170047, 2432697, 2710347, 3002997, 3310647, 3633297, 3970947, 4323597, 4691247, 5073897, 5471547, 5884197, 6311847, 6754497, 7212147, 7684797, 8172447, 8675097, 9192747, 9725397, 10273047, 10835697, 11413347, 12005997, 12613647, 13236297, 13873947, 14526597, 15194247, 15876897, 16574547, 17287197, 18014847, 18757497, 19515147, 20287797, 21075447, 21878097, 22695747, 23528397, 24376047, 25238697, 26116347, 27008997, 27916647, 28839297, 29776947, 30729597, 31697247, 32679897, 33677547, 34690197, 35717847, 36760497, 37818147, 38890797, 39978447, 41081097, 42198747, 43331397, 44479047, 45641697, 46819347, 48011997, 49219647, 50442297, 51679947, 52932597, 54200247, 55482897, 56780547, 58093197, 59420847, 60763497, 62121147, 63493797, 64881447, 66284097, 67701747, 69134397, 70582047, 72044697, 73522347, 75014997]

    #)()..() (additional closing bracket)
    time_td_3 = [0, 1, 2, 4, 4, 6, 8, 11, 11, 14, 16, 18, 23, 24, 28, 32, 37, 41, 46, 53, 57, 61, 69, 72, 81, 95, 96, 100, 114, 122, 121, 130, 144, 147, 175, 178, 191, 183, 202, 206, 232, 235, 253, 272, 275, 302, 297, 314, 327, 338, 345, 370, 393, 382, 416, 428, 431, 461, 465, 485, 519, 508, 533, 559, 555, 587, 610, 623, 648, 667, 693, 712, 720, 736, 760, 791, 805, 822, 857, 884, 902, 914, 944, 969, 995, 1007, 1057, 1088, 1083, 1103, 1134, 1168, 1193, 1206, 1239, 1272, 1300, 1322, 1338, 1381]
    counter_td_3 = [15150, 60300, 135450, 240600, 375750, 540900, 736050, 961200, 1216350, 1501500, 1816650, 2161800, 2536950, 2942100, 3377250, 3842400, 4337550, 4862700, 5417850, 6003000, 6618150, 7263300, 7938450, 8643600, 9378750, 10143900, 10939050, 11764200, 12619350, 13504500, 14419650, 15364800, 16339950, 17345100, 18380250, 19445400, 20540550, 21665700, 22820850, 24006000, 25221150, 26466300, 27741450, 29046600, 30381750, 31746900, 33142050, 34567200, 36022350, 37507500, 39022650, 40567800, 42142950, 43748100, 45383250, 47048400, 48743550, 50468700, 52223850, 54009000, 55824150, 57669300, 59544450, 61449600, 63384750, 65349900, 67345050, 69370200, 71425350, 73510500, 75625650, 77770800, 79945950, 82151100, 84386250, 86651400, 88946550, 91271700, 93626850, 96012000, 98427150, 100872300, 103347450, 105852600, 108387750, 110952900, 113548050, 116173200, 118828350, 121513500, 124228650, 126973800, 129748950, 132554100, 135389250, 138254400, 141149550, 144074700, 147029850, 150015000]

    plt.figure()
    plt.grid(axis='y')
    plt.title('Dyck language (top-down, fast cases)')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length_3, time_td_2, color='r',linestyle='-',label='td ()..()')
    plt.plot(length_3, time_td_3, color='b',linestyle='-',label='td )()..()')
    plt.legend(loc='upper left')
    plt.savefig('t_dyck_td_fast.jpg')

if dyck_order:
    ## plots Dyck made slow ( different order of rules, ()..()
    # bottom up
    time_bu_5 = [6, 5, 17, 47, 99, 123, 195, 285, 385, 549, 711, 930, 1104, 1370, 1724, 2283, 2678, 3217, 3871, 4437, 5455, 6372, 6539, 7452, 8583]
    counter_bu_5 = [626175, 5004850, 16886025, 40019700, 78155875, 135044550, 214435725, 320079400, 455725575, 625124250, 832025425, 1080179100, 1373335275, 1715243950, 2109655125, 2560318800, 3070984975, 3645403650, 4287324825, 5000498500, 5788674675, 6655603350, 7605034525, 8640718200, 9766404375]

    # top down
    time_td_5 = [8, 26, 74, 131, 249, 424, 675, 1008, 1434, 1970, 2624, 3398, 4323, 5388, 6642, 8060, 9635, 11463, 15210, 15717, 19104, 20960, 24017, 28209, 30912]
    counter_td_5 = [246669, 1985844, 6717519, 15941694, 31158369, 53867544, 85569219, 127763394, 181950069, 249629244, 332300919, 431465094, 548621769, 685270944, 842912619, 1023046794, 1227173469, 1456792644, 1713404319, 1998508494, 2313605169, 2660194344, 3039776019, 3453850194, 3903916869]

    plt.figure()
    plt.grid(axis='y')
    plt.title('Dyck language (different order of rules)')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length_2, time_td_5, color='r',linestyle='-',label='td ()..()')
    plt.plot(length_2, time_bu_5, color='b',linestyle='-',label='bu ()..()')
    plt.legend(loc='upper left')
    plt.savefig('t_dyck_order.jpg')

if stupid:
    # Stupid grammar (a..a)
    length_sg = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500]
    time_bu_sg = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 3]
    counter_bu_sg = [333300, 2666600, 8999900, 21333200, 41666500, 71999800, 114333100, 170666400, 242999700, 333333000, 443666300, 575999600, 732332900, 914666200, 1124999500, 1365332800, 1637666100, 1943999400, 2286332700, 2666666000, 3086999300, 3549332600, 4055665900, 4607999200, 5208332500]

    time_td_sg = [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 4, 5, 7, 9, 11, 13, 15, 19, 21, 25, 29, 33, 37, 42]
    counter_td_sg = [333300, 2666600, 8999900, 21333200, 41666500, 71999800, 114333100, 170666400, 242999700, 333333000, 443666300, 575999600, 732332900, 914666200, 1124999500, 1365332800, 1637666100, 1943999400, 2286332700, 2666666000, 3086999300, 3549332600, 4055665900, 4607999200, 5208332500]

    plt.figure()
    plt.grid(axis='y')
    plt.title('\"Stupid\" grammar')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length_2, time_bu_sg, color='r',linestyle='-',label='bottom-up')
    plt.plot(length_2, time_td_sg, color='b',linestyle='-',label='top-down')
    plt.legend(loc='upper left')
    plt.savefig('t_stupid.jpg')

if starting_td:
    # strings starting (sa) in a, top down, ms
    # input: ab..ab resp. ba..ba
    time_td_sa = [0, 0, 0, 0, 1, 1, 2, 1, 2, 2, 3, 5, 4, 5, 6, 8, 6, 7, 9, 10, 10, 11, 14, 13, 15, 16, 17, 17, 21, 21, 20, 26, 25, 26, 28, 32, 32, 33, 34, 37, 38, 40, 41, 45, 48, 51, 52, 57, 54, 58]
    counter_td_sa = [199, 399, 599, 799, 999, 1199, 1399, 1599, 1799, 1999, 2199, 2399, 2599, 2799, 2999, 3199, 3399, 3599, 3799, 3999, 4199, 4399, 4599, 4799, 4999, 5199, 5399, 5599, 5799, 5999, 6199, 6399, 6599, 6799, 6999, 7199, 7399, 7599, 7799, 7999, 8199, 8399, 8599, 8799, 8999, 9199, 9399, 9599, 9799, 9999]
    time_td_sa_w = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 1, 1, 2, 5, 2, 2, 2, 2, 5, 2, 3, 3, 3, 3, 4, 4, 4, 6, 5, 6, 5, 6, 7, 7, 7, 8, 7, 8, 8, 10, 9, 8, 9, 10, 10, 10, 11]
    counter_td_sa_w = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000]

    plt.figure()
    plt.grid(axis='y')
    plt.title('Strings starting in a, top-down')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length, time_td_sa, color='r',linestyle='-',label='ab..ab')
    plt.plot(length, time_td_sa_w, color='b',linestyle='-',label='ba..ba')
    plt.legend(loc='upper left')
    plt.savefig('t_sa_td.jpg')

    plt.figure()
    plt.grid(axis='y')
    plt.title('Strings starting in a, top-down')
    plt.xlabel('length')
    plt.ylabel('counter')
    plt.plot(length, counter_td_sa, color='r',linestyle='-',label='ab..ab')
    plt.plot(length, counter_td_sa_w, color='b',linestyle='-',label='ba..ba')
    plt.legend(loc='upper left')
    plt.savefig('c_sa_td.jpg')

    # strings starting in a, top down, aa..bb resp. bb..aa  (length 10000)
    time_td_sa_ser = [0, 0, 1, 1, 1, 1, 2, 3, 3, 4, 3, 4, 4, 7, 12, 9, 8, 8, 10, 13, 11, 10, 14, 15, 18, 15, 22, 19, 29, 19, 20, 23, 30, 28, 26, 27, 34, 31, 31, 38, 38, 37, 37, 43, 45, 47, 47, 53, 62, 54]
    counter_td_sa_ser = [199, 399, 599, 799, 999, 1199, 1399, 1599, 1799, 1999, 2199, 2399, 2599, 2799, 2999, 3199, 3399, 3599, 3799, 3999, 4199, 4399, 4599, 4799, 4999, 5199, 5399, 5599, 5799, 5999, 6199, 6399, 6599, 6799, 6999, 7199, 7399, 7599, 7799, 7999, 8199, 8399, 8599, 8799, 8999, 9199, 9399, 9599, 9799, 9999]
    time_td_sa_ser_w = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 3, 1, 1, 3, 3, 2, 2, 2, 2, 2, 4, 3, 3, 4, 4, 5, 5, 6, 5, 6, 6, 8, 8, 6, 8, 7, 8, 8, 8, 9, 10, 9, 9, 11, 10, 12, 11]
    counter_td_sa_ser_w = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000]

    plt.figure()
    plt.grid(axis='y')
    plt.title('Strings starting in a, top-down')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length, time_td_sa_ser, color='r',linestyle='-',label='aa..bb')
    plt.plot(length, time_td_sa_ser_w, color='b',linestyle='-',label='bb..aba')
    plt.legend(loc='upper left')
    plt.savefig('t_sa_td_ser.jpg')

if starting_bu:
    # strings starting (sa) in a, bottom up, ms, length 5000
    # ab..ab
    time_bu_sa = [1, 3, 4, 7, 10, 23, 27, 34, 47, 63, 83, 105, 132, 162, 199, 239, 284, 336, 394, 454, 524, 600, 682, 772, 869, 973, 1088, 1225, 1351, 1496, 1644, 1807, 1970, 2155, 2342, 2540, 2759, 2975, 3222, 3475, 3731, 4010, 4297, 4598, 4951, 5276, 5639, 6025, 6414, 6810]
    counter_bu_sa = [89525, 691550, 2306075, 5433100, 10572625, 18224650, 28889175, 43066200, 61255725, 83957750, 111672275, 144899300, 184138825, 229890850, 282655375, 342932400, 411221925, 488023950, 573838475, 669165500, 774505025, 890357050, 1017221575, 1155598600, 1305988125, 1468890150, 1644804675, 1834231700, 2037671225, 2255623250, 2488587775, 2737064800, 3001554325, 3282556350, 3580570875, 3896097900, 4229637425, 4581689450, 4952753975, 5343331000, 5753920525, 6185022550, 6637137075, 7110764100, 7606403625, 8124555650, 8665720175, 9230397200, 9819086725, 10432288750]

    # ba..ba
    time_bu_sa_w = [1, 2, 2, 5, 10, 20, 27, 34, 47, 62, 81, 104, 130, 160, 195, 235, 281, 331, 387, 450, 519, 592, 675, 763, 861, 964, 1078, 1214, 1340, 1477, 1629, 1791, 1956, 2138, 2324, 2525, 2743, 2956, 3331, 3825, 3980, 4239, 4259, 4552, 4871, 5192, 5537, 5892, 6266, 6620]
    counter_bu_sa_w = [91975, 701450, 2328425, 5472900, 10634875, 18314350, 29011325, 43225800, 61457775, 84207250, 111974225, 145258700, 184560675, 230380150, 283217125, 343571600, 411943575, 488833050, 574740025, 670164500, 775606475, 891565950, 1018542925, 1157037400, 1307549375, 1470578850, 1646625825, 1836190300, 2039772275, 2257871750, 2490988725, 2739623200, 3004275175, 3285444650, 3583631625, 3899336100, 4233058075, 4585297550, 4956554525, 5347329000, 5758120975, 6189430450, 6641757425, 7115601900, 7611463875, 8129843350, 8671240325, 9236154800, 9825086775, 10438536250]

    # aa..aa
    time_bu_sa_aa = [0, 0, 1, 2, 3, 5, 6, 9, 15, 17, 17, 19, 21, 24, 30, 33, 38, 43, 51, 55, 61, 68, 76, 83, 92, 100, 117, 125, 129, 141, 197, 186, 188, 195, 228, 269, 282, 322, 315, 336, 353, 380, 380, 418, 606, 499, 447, 535, 632, 550]
    counter_bu_sa_aa = [9900, 39800, 89700, 159600, 249500, 359400, 489300, 639200, 809100, 999000, 1208900, 1438800, 1688700, 1958600, 2248500, 2558400, 2888300, 3238200, 3608100, 3998000, 4407900, 4837800, 5287700, 5757600, 6247500, 6757400, 7287300, 7837200, 8407100, 8997000, 9606900, 10236800, 10886700, 11556600, 12246500, 12956400, 13686300, 14436200, 15206100, 15996000, 16805900, 17635800, 18485700, 19355600, 20245500, 21155400, 22085300, 23035200, 24005100, 24995000]

    # aa ..b.. aa
    time_bu_sa_aa_w = [0, 0, 1, 2, 4, 7, 9, 13, 15, 19, 21, 28, 29, 34, 40, 48, 56, 103, 77, 75, 81, 87, 95, 102, 114, 127, 145, 172, 186, 176, 228, 197, 214, 249, 265, 278, 342, 439, 381, 398, 360, 537, 476, 485, 613, 538, 556, 594, 655, 633]
    counter_bu_sa_aa_w = [11325, 45150, 101475, 180300, 281625, 405450, 551775, 720600, 911925, 1125750, 1362075, 1620900, 1902225, 2206050, 2532375, 2881200, 3252525, 3646350, 4062675, 4501500, 4962825, 5446650, 5952975, 6481800, 7033125, 7606950, 8203275, 8822100, 9463425, 10127250, 10813575, 11522400, 12253725, 13007550, 13783875, 14582700, 15404025, 16247850, 17114175, 18003000, 18914325, 19848150, 20804475, 21783300, 22784625, 23808450, 24854775, 25923600, 27014925, 28128750]

    # bb..bb
    time_bu_sa_bb = [2, 2, 3, 9, 20, 27, 34, 51, 72, 97, 129, 166, 208, 258, 318, 383, 458, 540, 632, 738, 852, 979, 1118, 1267, 1431, 1609, 1799, 2015, 2235, 2476, 2732, 3004, 3293, 3605, 3923, 4278, 4689, 5020, 5463, 5863, 6292, 6822, 7273, 7805, 8399, 8980, 9595, 10238, 10889, 11579]
    counter_bu_sa_bb = [171600, 1353200, 4544800, 10746400, 20958000, 36179600, 57411200, 85652800, 121904400, 167166000, 222437600, 288719200, 367010800, 458312400, 563624000, 683945600, 820277200, 973618800, 1144970400, 1335332000, 1545703600, 1777085200, 2030476800, 2306878400, 2607290000, 2932711600, 3284143200, 3662584800, 4069036400, 4504498000, 4969969600, 5466451200, 5994942800, 6556444400, 7151956000, 7782477600, 8449009200, 9152550800, 9894102400, 10674664000, 11495235600, 12356817200, 13260408800, 14207010400, 15197622000, 16233243600, 17314875200, 18443516800, 19620168400, 20845830000]

    # bb..a..bb
    time_bu_sa_bb_w = [1, 1, 3, 7, 15, 30, 36, 49, 64, 86, 114, 146, 183, 227, 278, 335, 400, 473, 555, 644, 744, 856, 977, 1106, 1252, 1403, 1575, 1759, 1951, 2155, 2385, 2626, 2877, 3142, 3430, 3735, 4065, 4409, 4760, 5144, 5520, 5965, 6558, 6968, 7459, 7983, 8529, 9167, 9661, 10222]
    counter_bu_sa_bb_w = [175525, 1368550, 4579075, 10807100, 21052625, 36315650, 57596175, 85894200, 122209725, 167542750, 222893275, 289261300, 367646825, 459049850, 564470375, 684908400, 821363925, 974836950, 1146327475, 1336835500, 1547361025, 1778904050, 2032464575, 2309042600, 2609638125, 2935251150, 3286881675, 3665529700, 4072195225, 4507878250, 4973578775, 5470296800, 5999032325, 6560785350, 7156555875, 7787343900, 8454149425, 9157972450, 9899812975, 10680671000, 11501546525, 12363439550, 13267350075, 14214278100, 15205223625, 16241186650, 17323167175, 18452165200, 19629180725, 20855213750]

    # aa..bb
    time_bu_sa_ser = [0, 1, 2, 4, 5, 8, 12, 19, 23, 28, 35, 43, 53, 64, 76, 91, 107, 124, 144, 165, 190, 213, 241, 271, 302, 336, 373, 423, 460, 512, 559, 609, 650, 722, 772, 834, 907, 975, 1049, 1120, 1201, 1279, 1364, 1451, 1552, 1662, 1761, 1869, 1992, 2092]
    counter_bu_sa_ser = [29500, 201500, 641000, 1473000, 2822500, 4814500, 7574000, 11226000, 15895500, 21707500, 28787000, 37259000, 47248500, 58880500, 72280000, 87572000, 104881500, 124333500, 146053000, 170165000, 196794500, 226066500, 258106000, 293038000, 330987500, 372079500, 416439000, 464191000, 515460500, 570372500, 629052000, 691624000, 758213500, 828945500, 903945000, 983337000, 1067246500, 1155798500, 1249118000, 1347330000, 1450559500, 1558931500, 1672571000, 1791603000, 1916152500, 2046344500, 2182304000, 2324156000, 2472025500, 2626037500]

    # bb..aa
    time_bu_sa_ser_w = [1, 3, 4, 7, 19, 25, 33, 47, 65, 88, 115, 148, 187, 230, 283, 339, 406, 481, 563, 656, 757, 869, 992, 1122, 1268, 1424, 1591, 1779, 1981, 2185, 2412, 2645, 2904, 3168, 3452, 3760, 4081, 4420, 4787, 5160, 5535, 5982, 6413, 6902, 7426, 7931, 8500, 9072, 9707, 10316]
    counter_bu_sa_ser_w = [152000, 1191500, 3993500, 9433000, 18385000, 31724500, 50326500, 75066000, 106818000, 146457500, 194859500, 252899000, 321451000, 401390500, 493592500, 598932000, 718284000, 852523500, 1002525500, 1169165000, 1353317000, 1555856500, 1777658500, 2019598000, 2282550000, 2567389500, 2874991500, 3206231000, 3561983000, 3943122500, 4350524500, 4785064000, 5247616000, 5739055500, 6260257500, 6812097000, 7395449000, 8011188500, 8660190500, 9343330000, 10061482000, 10815521500, 11606323500, 12434763000, 13301715000, 14208054500, 15154656500, 16142396000, 17172148000, 18244787500]

    plt.figure()
    plt.grid(axis='y')
    plt.title('Strings starting in a, bottom-up')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length, time_bu_sa, color='r',linestyle='-',label='ab..ab')
    plt.plot(length, time_bu_sa_w, color='r',linestyle=':',label='ba..ba')
    plt.plot(length, time_bu_sa_aa, color='b',linestyle='-',label='aa..aa')
    plt.plot(length, time_bu_sa_aa_w, color='b',linestyle=':',label='aa..b..aa')
    plt.plot(length, time_bu_sa_ser, color='tab:orange',linestyle='-',label='aa..bb')
    plt.plot(length, time_bu_sa_ser_w, color='tab:orange',linestyle='--',label='bb..aa')
    plt.plot(length, time_bu_sa_bb, color='g',linestyle='-',label='bb..bb')
    plt.plot(length, time_bu_sa_bb_w, color='g',linestyle=':',label='bb..a..bb')
    plt.legend(loc='upper left')
    plt.savefig('t_sa_bu.jpg')

if ending:
    # strings ending (ea) in a, bottom up, ms
    #input: ba..ba resp. ab..ab
    time_bu_ea = [2, 3, 11, 27, 64, 103, 133, 212, 303, 429, 561, 727, 917, 1032, 1292, 1575, 1922, 2392, 2903, 3268, 3836, 4993, 5658, 6459, 7684]
    counter_bu_ea = [171600, 1353200, 4544800, 10746400, 20958000, 36179600, 57411200, 85652800, 121904400, 167166000, 222437600, 288719200, 367010800, 458312400, 563624000, 683945600, 820277200, 973618800, 1144970400, 1335332000, 1545703600, 1777085200, 2030476800, 2306878400, 2607290000]
    time_bu_ea_w = [3, 5, 16, 25, 52, 90, 126, 187, 278, 369, 512, 642, 826, 1084, 1376, 1666, 2057, 2480, 3040, 3560, 4292, 4759, 5934, 6945, 7684]
    counter_bu_ea_w = [171600, 1353200, 4544800, 10746400, 20958000, 36179600, 57411200, 85652800, 121904400, 167166000, 222437600, 288719200, 367010800, 458312400, 563624000, 683945600, 820277200, 973618800, 1144970400, 1335332000, 1545703600, 1777085200, 2030476800, 2306878400, 2607290000]

    # strings ending (ea) in a, top down, with wrong input, ms
    # input: ba..ba resp. ab..ab
    time_td_ea = [1, 11, 20, 42, 97, 115, 176, 260, 372, 506, 676, 872, 1103, 1376, 1687, 2044, 2449, 2905, 3409, 3976, 4600, 5328, 6329, 6897, 7855]
    counter_td_ea = [9901, 39801, 89701, 159601, 249501, 359401, 489301, 639201, 809101, 999001, 1208901, 1438801, 1688701, 1958601, 2248501, 2558401, 2888301, 3238201, 3608101, 3998001, 4407901, 4837801, 5287701, 5757601, 6247501]
    time_td_ea_w = [2, 13, 18, 52, 82, 134, 193, 298, 431, 572, 773, 970, 1188, 1552, 1844, 2196, 2621, 3085, 3625, 4597, 4995, 5608, 6427, 7274, 8241]
    counter_td_ea_w = [9901, 39801, 89701, 159601, 249501, 359401, 489301, 639201, 809101, 999001, 1208901, 1438801, 1688701, 1958601, 2248501, 2558401, 2888301, 3238201, 3608101, 3998001, 4407901, 4837801, 5287701, 5757601, 6247501]

    # strings ending in a, bottom up, bb..aa resp. aa..bb (length 2500)
    time_bu_ea_ser = [2, 2, 10, 22, 51, 67, 106, 163, 256, 340, 488, 668, 779, 1042, 1345, 1639, 2018, 2459, 3005, 3507, 4185, 4976, 5616, 6369, 7369]
    counter_bu_ea_ser = [171600, 1353200, 4544800, 10746400, 20958000, 36179600, 57411200, 85652800, 121904400, 167166000, 222437600, 288719200, 367010800, 458312400, 563624000, 683945600, 820277200, 973618800, 1144970400, 1335332000, 1545703600, 1777085200, 2030476800, 2306878400, 2607290000]
    time_bu_ea_ser_w = [2, 4, 12, 29, 51, 75, 120, 178, 264, 373, 483, 630, 819, 1089, 1581, 1950, 2034, 2479, 3042, 3524, 4213, 4947, 5610, 6382, 7853]
    counter_bu_se_ser_w = [171600, 1353200, 4544800, 10746400, 20958000, 36179600, 57411200, 85652800, 121904400, 167166000, 222437600, 288719200, 367010800, 458312400, 563624000, 683945600, 820277200, 973618800, 1144970400, 1335332000, 1545703600, 1777085200, 2030476800, 2306878400, 2607290000]

    # strings ending in a, topd down, bb..aa resp. aa..bb (length 2500)
    time_td_ea_ser = [2, 15, 18, 42, 71, 114, 176, 261, 371, 506, 670, 869, 1105, 1506, 1905, 2185, 2455, 2909, 3408, 3984, 4605, 5344, 6061, 6891, 7770]
    counter_td_ea_ser = [9901, 39801, 89701, 159601, 249501, 359401, 489301, 639201, 809101, 999001, 1208901, 1438801, 1688701, 1958601, 2248501, 2558401, 2888301, 3238201, 3608101, 3998001, 4407901, 4837801, 5287701, 5757601, 6247501]
    time_td_ea_ser_w = [2, 8, 19, 41, 69, 114, 183, 250, 357, 485, 644, 835, 1061, 1322, 1626, 1967, 2359, 2802, 3283, 3841, 4440, 5105, 5834, 6624, 7479]
    counter_td_ea_ser_w = [9901, 39801, 89701, 159601, 249501, 359401, 489301, 639201, 809101, 999001, 1208901, 1438801, 1688701, 1958601, 2248501, 2558401, 2888301, 3238201, 3608101, 3998001, 4407901, 4837801, 5287701, 5757601, 6247501]

    plt.figure()
    plt.grid(axis='y')
    plt.title('Strings ending in a')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length_2, time_bu_ea, color='r',linestyle='-',label='bottom up, ba..ba')
    plt.plot(length_2, time_td_ea, color='b',linestyle='-',label='top-down, ba..ba')
    plt.plot(length_2, time_bu_ea_w, color='g',linestyle='-',label='bottom-up, ab..ab')
    plt.plot(length_2, time_td_ea_w, color='y',linestyle='-',label='top-down, ab..ab')
    plt.plot(length_2, time_bu_ea_ser, color='r',linestyle='-',label='bottom up, bb..aa')
    plt.plot(length_2, time_td_ea_ser, color='b',linestyle='-',label='top-down, bb..aa')
    plt.plot(length_2, time_bu_ea_ser_w, color='g',linestyle='-',label='bottom-up, aa..bb')
    plt.plot(length_2, time_td_ea_ser_w, color='y',linestyle='-',label='top-down, aa..bb')
    plt.legend(loc='upper left')
    plt.savefig('t_ea_td_bu.jpg')

    fig, ax1 = plt.subplots()
    ax1.set_xlabel('length')
    ax1.set_ylabel('counter')
    l1 = ax1.plot(length_2, counter_bu_ea, color='r',linestyle='-',label='bottom-up')
    ax1.tick_params(axis='y', labelcolor='r')
    ax2 = ax1.twinx()
    l2 = ax2.plot(length_2, counter_td_ea, color='b',linestyle='-',label='top-down')
    ax2.tick_params(axis='y', labelcolor='b')

    leg = l1 + l2
    labs = [l.get_label() for l in leg]
    ax1.legend(leg, labs, loc='upper left')
    plt.title('Strings ending in a')
    plt.savefig('c_ea_td_bu.jpg')

if linear_cnf:
    # Dyck Bottom-Up, Linear-cnf
    #((...))
    time_bu_lin_1 = [4, 4, 12, 28, 60, 89, 118, 173, 243, 330, 435, 562, 709, 878, 1080, 1308, 1568, 1861, 2249, 2579, 2958, 3417, 3946, 4459, 5160, 5713, 6418, 7168, 7968, 8831, 9781, 10749, 11787, 12931, 14031, 15315, 16667, 18089, 19519, 21077, 22603, 24386, 26180, 28015, 30033, 32130, 34344, 36566, 38887, 41233]
    counter_bu_lin_1 = [497500, 3990000, 13477500, 31960000, 62437500, 107910000, 171377500, 255840000, 364297500, 499750000, 665197500, 863640000, 1098077500, 1371510000, 1686937500, 2047360000, 2455777500, 2915190000, 3428597500, 3999000000, 4629397500, 5322790000, 6082177500, 6910560000, 7810937500, 8786310000, 9839677500, 10974040000, 12192397500, 13497750000, 14893097500, 16381440000, 17965777500, 19649110000, 21434437500, 23324760000, 25323077500, 27432390000, 29655697500, 31996000000, 34456297500, 37039590000, 39748877500, 42587160000, 45557437500, 48662710000, 51905977500, 55290240000, 58818497500, 62493750000]

    #()..()
    time_bu_lin_2 = [3, 7, 10, 24, 46, 73, 108, 153, 217, 298, 393, 510, 700, 805, 997, 1213, 1487, 1780, 2113, 2470, 2767, 3303, 3737, 4313, 5070, 5500, 6101, 6938, 7628, 8496, 9957, 10851, 11816, 13335, 14681, 16101, 17576, 19386, 21567, 23714, 25115, 27639, 29778, 32177, 34872, 37591, 40457, 43532, 46504, 50089]
    counter_bu_lin_2 = [417875, 3338250, 11261125, 26686500, 52114375, 90044750, 142977625, 213413000, 303850875, 416791250, 554734125, 720179500, 915627375, 1143577750, 1406530625, 1706986000, 2047443875, 2430404250, 2858367125, 3333832500, 3859300375, 4437270750, 5070243625, 5760719000, 6511196875, 7324177250, 8202160125, 9147645500, 10163133375, 11251123750, 12414116625, 13654612000, 14975109875, 16378110250, 17866113125, 19441618500, 21107126375, 22865136750, 24718149625, 26668665000, 28719182875, 30872203250, 33130226125, 35495751500, 37971279375, 40559309750, 43262342625, 46082878000, 49023415875, 52086456250]

    #)()..() (additional closing bracket)
    time_bu_lin_3 = [4, 4, 12, 23, 49, 77, 106, 155, 220, 324, 397, 511, 653, 823, 1012, 1236, 1496, 1725, 2132, 2489, 2765, 3205, 3854, 4442, 5195, 5413, 6209, 6855, 7688, 8655, 9916, 10942, 11903, 13320, 14724, 16338, 17860, 19797, 21816, 24143, 25253, 27882, 30123, 32317, 35196, 38019, 41014, 44029, 47219, 50607]
    counter_bu_lin_3 = [430525, 3388550, 11374075, 26887100, 52427625, 90495650, 143591175, 214214200, 304864725, 418042750, 556248275, 721981300, 917741825, 1146029850, 1409345375, 1710188400, 2051058925, 2434456950, 2862882475, 3338835500, 3864816025, 4443324050, 5076859575, 5767922600, 6519013125, 7332631150, 8211276675, 9157449700, 10173650225, 11262378250, 12426133775, 13667416800, 14988727325, 16392565350, 17881430875, 19457823900, 21124244425, 22883192450, 24737167975, 26688671000, 28740201525, 30894259550, 33153345075, 35519958100, 37996598625, 40585766650, 43289962175, 46111685200, 49053435725, 52117713750]

    # Plot to compare all three configurations
    # ((..)), original grammar, bu (copy pasted from top)
    time_bu_1 = [6, 5, 16, 42, 71, 103, 156, 244, 344, 444, 575, 758, 978, 1162, 1430, 1724, 2067, 2449, 2876, 3357, 3870, 4451, 5079, 5764, 6567, 7341, 8222, 9191, 10197, 11302, 12487, 13740, 15057, 16523, 18047, 19740, 21452, 23259, 25213, 27170, 29207, 31471, 33771, 36201, 38808, 41381, 44193, 47097, 50130, 53205]
    counter_bu_1 = [664150, 5323300, 17977450, 42626600, 83270750, 143909900, 228544050, 341173200, 485797350, 666416500, 887030650, 1151639800, 1464243950, 1828843100, 2249437250, 2730026400, 3274610550, 3887189700, 4571763850, 5332333000, 6172897150, 7097456300, 8110010450, 9214559600, 10415103750, 11715642900, 13120177050, 14632706200, 16257230350, 17997749500, 19858263650, 21842772800, 23955276950, 26199776100, 28580270250, 31100759400, 33765243550, 36577722700, 39542196850, 42662666000, 45943130150, 49387589300, 53000043450, 56784492600, 60744936750, 64885375900, 69209810050, 73722239200, 78426663350, 83327082500]

    # ((..)), linear grammar, bu (copy pasted from bellow)
    time_bu_lin_1_lin =  [0, 1, 2, 3, 4, 7, 6, 9, 10, 13, 21, 19, 20, 23, 25, 30, 32, 35, 42, 48, 48, 52, 58, 62, 69, 78, 87, 93, 101, 111, 124, 132, 146, 151, 152, 163, 173, 184, 201, 213, 216, 234, 240, 247, 462, 304, 295, 346, 324, 342]
    counter_bu_lin_1_lin = [14850, 59700, 134550, 239400, 374250, 539100, 733950, 958800, 1213650, 1498500, 1813350, 2158200, 2533050, 2937900, 3372750, 3837600, 4332450, 4857300, 5412150, 5997000, 6611850, 7256700, 7931550, 8636400, 9371250, 10136100, 10930950, 11755800, 12610650, 13495500, 14410350, 15355200, 16330050, 17334900, 18369750, 19434600, 20529450, 21654300, 22809150, 23994000, 25208850, 26453700, 27728550, 29033400, 30368250, 31733100, 33127950, 34552800, 36007650, 37492500]

    fig, ax1 = plt.subplots()
    ax1.set_xlabel('length')
    ax1.set_ylabel('time')
    l1 = ax1.plot(length, time_bu_1, color='r',linestyle='-',label='CNF')
    l2 = ax1.plot(length, time_bu_lin_1, color='r',linestyle='--',label='linear transformed to CNF')
    l3 = ax1.plot(length, time_bu_lin_1_lin, color='r',linestyle=':',label='linear')
    ax1.tick_params(axis='y', labelcolor='r')
    ax2 = ax1.twinx()
    ax2.set_ylabel('counter')
    ax2.plot(length, counter_bu_1, color='b',linestyle='-')
    ax2.plot(length, counter_bu_lin_1, color='b',linestyle='--')
    ax2.plot(length, counter_bu_lin_1_lin, color='b',linestyle=':')
    ax2.tick_params(axis='y', labelcolor='b')

    leg = l1 + l2 + l3
    labs = [l.get_label() for l in leg]
    ax1.legend(leg, labs, loc='upper left')
    plt.title('Dyck Grammar, linear vs. CNF')
    plt.savefig('t_c_dyck_lin_cnf.jpg')

    #add a plot for time and counter, for both this and the non-linear implementation       q

if linear_abc:
    length_ab = [100, 199, 298, 397, 496, 595, 694, 793, 892, 991, 1090, 1189, 1288, 1387, 1486, 1585, 1684, 1783, 1882, 1981, 2080, 2179, 2278, 2377, 2476, 2575, 2674, 2773, 2872, 2971, 3070, 3169, 3268, 3367, 3466, 3565, 3664, 3763, 3862, 3961, 4060, 4159, 4258, 4357, 4456, 4555, 4654, 4753, 4852, 4951, 5050]
    # abab..b..cc
    t_abc_lin_ab = [0, 0, 1, 2, 4, 4, 8, 11, 13, 13, 15, 18, 22, 25, 29, 33, 38, 43, 49, 56, 64, 71, 78, 87, 94, 107, 115, 128, 130, 142, 154, 168, 183, 198, 202, 254, 249, 274, 269, 282, 303, 304, 323, 340, 352, 371, 387, 402, 408, 432, 443]
    c_abc_lin_ab = [19767, 78738, 176913, 314292, 490875, 706662, 961653, 1255848, 1589247, 1961850, 2373657, 2824668, 3314883, 3844302, 4412925, 5020752, 5667783, 6354018, 7079457, 7844100, 8647947, 9490998, 10373253, 11294712, 12255375, 13255242, 14294313, 15372588, 16490067, 17646750, 18842637, 20077728, 21352023, 22665522, 24018225, 25410132, 26841243, 28311558, 29821077, 31369800, 32957727, 34584858, 36251193, 37956732, 39701475, 41485422, 43308573, 45170928, 47072487, 49013250, 50993217]
    # linear-cnf:
    t_abc_cnf_ab = [5, 5, 17, 38, 73, 119, 162, 239, 335, 452, 594, 764, 965, 1198, 1461, 1768, 2119, 2504, 2943, 3425, 3965, 4564, 5219, 5950, 6718, 7566, 8489, 9490, 10566, 11687, 12986, 14222, 15595, 17113, 18682, 20651, 22043, 23925, 25885, 27930, 30098, 32207, 34748, 37165, 39536, 42338, 45035, 48232, 51134, 54261, 57609]
    c_abc_cnf_ab =[663399, 5240664, 17612991, 41661576, 81267615, 140312304, 222676839, 332242416, 472890231, 648501480, 862957359, 1120139064, 1423927791, 1778204736, 2186851095, 2653748064, 3182776839, 3777818616, 4442754591, 5181465960, 5997833919, 6895739664, 7879064391, 8951689296, 10117495575, 11380364424, 12744177039, 14212814616, 15790158351, 17480089440, 19286489079, 21213238464, 23264218791, 25443311256, 27754397055, 30201357384, 32788073439, 35518426416, 38396297511, 41425567920, 44610118839, 47953831464, 51460586991, 55134266616, 58978751535, 62997922944, 67195662039, 71575850016, 76142368071, 80899097400, 85849919199]

    # abab..bc..cc
    t_abc_lin_ab_c = [0, 0, 1, 2, 3, 4, 7, 10, 12, 14, 15, 18, 21, 25, 29, 34, 39, 43, 49, 56, 64, 71, 79, 87, 96, 106, 117, 125, 131, 144, 155, 168, 177, 193, 207, 247, 241, 250, 265, 272, 289, 306, 323, 344, 352, 363, 386, 398, 421, 450, 442]
    c_abc_lin_ab_c = [20167, 79534, 178105, 315880, 492859, 709042, 964429, 1259020, 1592815, 1965814, 2378017, 2829424, 3320035, 3849850, 4418869, 5027092, 5674519, 6361150, 7086985, 7852024, 8656267, 9499714, 10382365, 11304220, 12265279, 13265542, 14305009, 15383680, 16501555, 17658634, 18854917, 20090404, 21365095, 22678990, 24032089, 25424392, 26855899, 28326610, 29836525, 31385644, 32973967, 34601494, 36268225, 37974160, 39719299, 41503642, 43327189, 45189940, 47091895, 49033054, 51013417]

    # aa..b ..cc
    t_abc_lin_aa = [0, 1, 1, 2, 3, 5, 8, 11, 14, 16, 17, 20, 24, 28, 33, 38, 43, 49, 54, 61, 70, 79, 87, 96, 107, 115, 130, 142, 150, 177, 397, 197, 200, 221, 230, 247, 272, 282, 294, 323, 323, 366, 400, 387, 576, 430, 432, 482, 485, 490]
    c_abc_lin_aa = [20150, 80300, 180450, 320600, 500750, 720900, 981050, 1281200, 1621350, 2001500, 2421650, 2881800, 3381950, 3922100, 4502250, 5122400, 5782550, 6482700, 7222850, 8003000, 8823150, 9683300, 10583450, 11523600, 12503750, 13523900, 14584050, 15684200, 16824350, 18004500, 19224650, 20484800, 21784950, 23125100, 24505250, 25925400, 27385550, 28885700, 30425850, 32006000, 33626150, 35286300, 36986450, 38726600, 40506750, 42326900, 44187050, 46087200, 48027350, 50007500]
    # linear-cnf:
    t_abc_cnf_aa = [9, 6, 18, 42, 72, 113, 158, 233, 328, 446, 588, 755, 958, 1196, 1466, 1769, 2119, 2530, 2952, 3441, 4009, 4614, 5299, 6031, 6863, 7678, 8612, 9613, 10694, 11878, 13128, 14447, 15824, 17318, 18857, 20557, 22332, 24250, 26167, 28230, 30302, 32684, 35180, 37756, 40229, 42955, 45803, 48841, 51905, 55170]
    c_abc_cnf_aa = [684350, 5403700, 18158050, 42947400, 83771750, 144631100, 229525450, 342454800, 487419150, 668418500, 889452850, 1154522200, 1467626550, 1832765900, 2253940250, 2735149600, 3280393950, 3893673300, 4578987650, 5340337000, 6181721350, 7107140700, 8120595050, 9226084400, 10427608750, 11729168100, 13134762450, 14648391800, 16274056150, 18015755500, 19877489850, 21863259200, 23977063550, 26222902900, 28604777250, 31126686600, 33792630950, 36606610300, 39572624650, 42694674000, 45976758350, 49422877700, 53037032050, 56823221400, 60785445750, 64927705100, 69253999450, 73768328800, 78474693150, 83377092500]

    # aa..ab..cc
    t_abc_lin_aa_a = [0, 1, 1, 2, 4, 8, 10, 12, 12, 15, 16, 20, 23, 28, 32, 37, 42, 47, 52, 59, 68, 77, 86, 94, 109, 112, 125, 141, 146, 167, 343, 195, 206, 215, 231, 257, 269, 291, 317, 334, 372, 413, 370, 404, 530, 426, 422, 443, 466, 484]
    c_abc_lin_aa_a = [20553, 81103, 181653, 322203, 502753, 723303, 983853, 1284403, 1624953, 2005503, 2426053, 2886603, 3387153, 3927703, 4508253, 5128803, 5789353, 6489903, 7230453, 8011003, 8831553, 9692103, 10592653, 11533203, 12513753, 13534303, 14594853, 15695403, 16835953, 18016503, 19237053, 20497603, 21798153, 23138703, 24519253, 25939803, 27400353, 28900903, 30441453, 32022003, 33642553, 35303103, 37003653, 38744203, 40524753, 42345303, 44205853, 46106403, 48046953, 50027503]
    # linear-cnf:
    t_abc_cnf_aa_a = [5, 5, 17, 40, 77, 116, 159, 234, 331, 450, 591, 759, 960, 1211, 1470, 1773, 2126, 2528, 2960, 3444, 4007, 4607, 5296, 6034, 6859, 7686, 8628, 9660, 10726, 11906, 13183, 14459, 15850, 17372, 18951, 20618, 22354, 24218, 26177, 28349, 30417, 32799, 35136, 37667, 40300, 43018, 45840, 48834, 51836, 55069]
    c_abc_cnf_aa_a = [704854, 5484704, 18339554, 43269404, 84274254, 145354104, 230508954, 343738804, 489043654, 670423504, 891878354, 1157408204, 1471013054, 1836692904, 2258447754, 2740277604, 3286182454, 3900162304, 4586217154, 5348347004, 6190551854, 7116831704, 8131186554, 9237616404, 10440121254, 11742701104, 13149355954, 14664085804, 16290890654, 18033770504, 19896725354, 21883755204, 23998860054, 26246039904, 28629294754, 31152624604, 33820029454, 36635509304, 39603064154, 42726694004, 46010398854, 49458178704, 53074033554, 56861963404, 60825968254, 64970048104, 69298202954, 73814432804, 78522737654, 83427117504]

    ref_lin = list(map(lambda x: x ** 2 / 10 ** 5 * 1.8, length))
    ref_cnf = list(map(lambda x: x ** 3 / 10 ** 6 * 0.45, length))

    plt.figure()
    plt.grid(axis='y')
    plt.title('Linear ABC Grammar (bottom-up)')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length_ab, t_abc_lin_ab, color='r',linestyle='-',label='lin ab..b..c')
    plt.plot(length_ab, t_abc_lin_ab_c, color='b',linestyle='-',label='lin ab..bc..c')
    plt.plot(length, t_abc_lin_aa, color='g',linestyle='-',label='lin aa..b..cc')
    plt.plot(length, t_abc_lin_aa_a, color='y',linestyle='-',label='lin aa..ab..cc')
    plt.plot(length, ref_lin, color='black',linestyle=':',label='f(x) = x^2 * 1.8 * 10^-5')
    plt.legend(loc='upper left')
    plt.savefig('t_abc_lin.jpg')

    plt.figure()
    plt.grid(axis='y')
    plt.title('Linear ABC Grammar pared to CNF (bottom-up)')
    plt.xlabel('length')
    plt.ylabel('time')
    plt.plot(length_ab, t_abc_cnf_ab, color='r',linestyle='-',label='lin ab..b..c')
    plt.plot(length, t_abc_cnf_aa, color='g',linestyle='-',label='lin aa..b..cc')
    plt.plot(length, t_abc_cnf_aa_a, color='y',linestyle='-',label='lin aa..ab..cc')
    plt.plot(length, ref_cnf, color='black',linestyle=':',label='f(x) = x^3 * 0.45 * 10^-6')
    plt.legend(loc='upper left')
    plt.savefig('t_abc_cnf.jpg')

if linear_dyck:
    # Dyck Bottom-Up, Linear-cnf
    #((...))
    time_bu_lin_1 =  [0, 1, 2, 3, 4, 7, 6, 9, 10, 13, 21, 19, 20, 23, 25, 30, 32, 35, 42, 48, 48, 52, 58, 62, 69, 78, 87, 93, 101, 111, 124, 132, 146, 151, 152, 163, 173, 184, 201, 213, 216, 234, 240, 247, 462, 304, 295, 346, 324, 342]
    counter_bu_lin_1 = [14850, 59700, 134550, 239400, 374250, 539100, 733950, 958800, 1213650, 1498500, 1813350, 2158200, 2533050, 2937900, 3372750, 3837600, 4332450, 4857300, 5412150, 5997000, 6611850, 7256700, 7931550, 8636400, 9371250, 10136100, 10930950, 11755800, 12610650, 13495500, 14410350, 15355200, 16330050, 17334900, 18369750, 19434600, 20529450, 21654300, 22809150, 23994000, 25208850, 26453700, 27728550, 29033400, 30368250, 31733100, 33127950, 34552800, 36007650, 37492500]

    #()..()
    time_bu_lin_2 = [0, 0, 1, 2, 2, 3, 6, 6, 8, 12, 15, 16, 17, 18, 21, 24, 29, 31, 36, 41, 45, 51, 56, 61, 67, 73, 78, 85, 92, 97, 106, 117, 125, 131, 145, 164, 158, 167, 180, 189, 202, 208, 222, 239, 306, 257, 266, 271, 279, 292]
    counter_bu_lin_2 = [13625, 54750, 123375, 219500, 343125, 494250, 672875, 879000, 1112625, 1373750, 1662375, 1978500, 2322125, 2693250, 3091875, 3518000, 3971625, 4452750, 4961375, 5497500, 6061125, 6652250, 7270875, 7917000, 8590625, 9291750, 10020375, 10776500, 11560125, 12371250, 13209875, 14076000, 14969625, 15890750, 16839375, 17815500, 18819125, 19850250, 20908875, 21995000, 23108625, 24249750, 25418375, 26614500, 27838125, 29089250, 30367875, 31674000, 33007625, 34368750]

    #)()..() (additional closing bracket)
    time_bu_lin_3 = [0, 0, 1, 1, 2, 3, 5, 6, 8, 12, 13, 14, 15, 19, 21, 25, 28, 32, 37, 42, 47, 52, 58, 63, 69, 75, 82, 88, 95, 102, 112, 120, 127, 139, 143, 159, 167, 178, 185, 220, 205, 215, 228, 250, 410, 265, 294, 302, 306, 340]
    counter_bu_lin_3 = [13875, 55250, 124125, 220500, 344375, 495750, 674625, 881000, 1114875, 1376250, 1665125, 1981500, 2325375, 2696750, 3095625, 3522000, 3975875, 4457250, 4966125, 5502500, 6066375, 6657750, 7276625, 7923000, 8596875, 9298250, 10027125, 10783500, 11567375, 12378750, 13217625, 14084000, 14977875, 15899250, 16848125, 17824500, 18828375, 19859750, 20918625, 22005000, 23118875, 24260250, 25429125, 26625500, 27849375, 29100750, 30379625, 31686000, 33019875, 34381250]
